import ora from 'ora';
import WebSocket from 'ws';
import { Command } from '@oclif/core';
import './interceptors';
interface IAccount {
    email: string;
    api_token?: string;
    'api-token'?: string;
    region: string;
    fullname: string;
    avatar: string;
    current: boolean;
    accountName?: string;
}
export interface IAccounts {
    [key: string]: IAccount;
}
export interface IGlobalLiaraConfig {
    version: string;
    accounts: IAccounts;
}
export interface IConfig {
    'api-token'?: string;
    region?: string;
}
export interface IProject {
    _id: string;
    planID: string;
    scale: number;
    type: string;
    status: string;
    project_id: string;
    created_at: string;
    isDeployed: boolean;
}
export interface IGetProjectsResponse {
    projects: IProject[];
}
export default abstract class extends Command {
    static flags: {
        help: import("@oclif/core/lib/interfaces").BooleanFlag<void>;
        dev: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        debug: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'api-token': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        region: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    };
    got: import("got/dist/source").Got;
    spinner: ora.Ora;
    readGlobalConfig(): Promise<IGlobalLiaraConfig>;
    catch(error: any): Promise<void>;
    setGotConfig(config: IConfig): Promise<void>;
    createProxiedWebsocket(endpoint: string): WebSocket;
    promptProject(): Promise<string>;
    getCurrentAccount(): Promise<IAccount>;
}
export {};
