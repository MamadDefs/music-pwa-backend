"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const base_1 = tslib_1.__importDefault(require("../../base"));
const spacing_1 = tslib_1.__importDefault(require("../../utils/spacing"));
class PlanList extends base_1.default {
    async run() {
        const { flags } = await this.parse(PlanList);
        await this.setGotConfig(flags);
        const { plans } = await this.got('v1/me').json();
        const plansData = Object.keys(plans.projects)
            .filter((plan) => plans.projects[plan].available &&
            plans.projects[plan].region === 'iran')
            .map((plan) => {
            const Plan = plan;
            const availablePlan = plans.projects[plan];
            const tRAM = availablePlan.RAM.amount;
            const RAM = tRAM + spacing_1.default(5, tRAM) + 'GB';
            const tCPU = availablePlan.CPU.amount;
            const CPU = tCPU + spacing_1.default(5, tCPU) + 'Core';
            const StorageClass = availablePlan.storageClass;
            const tDisk = availablePlan.volume;
            const Disk = tDisk
                ? tDisk + spacing_1.default(3, tDisk) + `GB ${StorageClass}`
                : 0;
            const tPrice = availablePlan.price * 720;
            const Price = tPrice
                ? tPrice.toLocaleString() + spacing_1.default(7, tPrice) + 'Tomans/Month'
                : 0;
            return {
                Plan,
                RAM,
                CPU,
                Disk,
                Price,
            };
        });
        core_1.CliUx.ux.table(plansData, { Plan: {}, RAM: {}, CPU: {}, Disk: {}, Price: {} }, flags);
    }
}
exports.default = PlanList;
PlanList.description = 'list available plans';
PlanList.flags = Object.assign(Object.assign({}, base_1.default.flags), core_1.CliUx.ux.table.flags());
PlanList.aliases = ['plan:ls'];
