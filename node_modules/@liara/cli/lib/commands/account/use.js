"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const base_1 = tslib_1.__importDefault(require("../../base"));
const inquirer_1 = require("inquirer");
const core_1 = require("@oclif/core");
const constants_1 = require("../../constants");
class AccountUse extends base_1.default {
    async run() {
        const { flags } = await this.parse(AccountUse);
        const liara_json = await this.readGlobalConfig();
        if (!liara_json ||
            !liara_json.accounts ||
            Object.keys(liara_json.accounts).length === 0) {
            this.error("Please add your accounts via 'liara account:add' command, first.");
        }
        const name = flags.account || (await this.promptName(liara_json.accounts));
        const selectedAccount = liara_json.accounts[name];
        !selectedAccount &&
            this.error(`Could not find any account associated with this name ${name}.`);
        for (const account of Object.keys(liara_json.accounts)) {
            liara_json.accounts[account].current = false;
            if (name === account) {
                liara_json.accounts[account].current = true;
            }
        }
        fs_extra_1.default.writeFileSync(constants_1.GLOBAL_CONF_PATH, JSON.stringify({
            version: constants_1.GLOBAL_CONF_VERSION,
            accounts: liara_json.accounts,
        }));
        this.log(chalk_1.default.green('> Auth credentials changed.'));
    }
    async promptName(accounts) {
        const { name } = (await inquirer_1.prompt({
            name: 'name',
            type: 'list',
            message: 'Enter your account name:',
            choices: [...Object.keys(accounts)],
        }));
        return name;
    }
}
exports.default = AccountUse;
AccountUse.description = 'select an account';
AccountUse.flags = Object.assign(Object.assign({}, base_1.default.flags), { account: core_1.Flags.string({ char: 'a', description: 'account name' }) });
