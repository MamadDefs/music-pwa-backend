"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const inquirer_1 = tslib_1.__importDefault(require("inquirer"));
const base_1 = tslib_1.__importDefault(require("../../base"));
const core_1 = require("@oclif/core");
const output_1 = require("../../utils/output");
class AppDelete extends base_1.default {
    async run() {
        const { flags } = await this.parse(AppDelete);
        const debug = output_1.createDebugLogger(flags.debug);
        await this.setGotConfig(flags);
        const app = flags.app || (await this.promptProject());
        try {
            // TODO: Add --force or -f flag to force the deletion
            if (await this.confirm(app)) {
                await this.got.delete(`v1/projects/${app}`);
                this.log(`App ${app} deleted.`);
            }
        }
        catch (error) {
            debug(error.message);
            if (error.response && error.response.data) {
                debug(JSON.stringify(error.response.data));
            }
            if (error.response && error.response.status === 404) {
                this.error(`Could not find the app.`);
            }
            if (error.response && error.response.status === 409) {
                this.error(`Another operation is already running. Please wait.`);
            }
            this.error(`Could not delete the app. Please try again.`);
        }
    }
    async confirm(app) {
        const { confirmation } = (await inquirer_1.default.prompt({
            name: 'confirmation',
            type: 'confirm',
            message: `Are you sure you want to delete "${app}"?`,
            default: false,
        }));
        return confirmation;
    }
}
exports.default = AppDelete;
AppDelete.description = 'delete an app';
AppDelete.flags = Object.assign(Object.assign({}, base_1.default.flags), { app: core_1.Flags.string({
        char: 'a',
        description: 'app id',
    }) });
AppDelete.aliases = ['delete'];
