"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const core_1 = require("@oclif/core");
const shamsi = tslib_1.__importStar(require("shamsi-date-converter"));
const base_1 = tslib_1.__importDefault(require("../../base"));
class DatabaseList extends base_1.default {
    async run() {
        const { flags } = await this.parse(DatabaseList);
        await this.setGotConfig(flags);
        const { databases } = await this.got('v1/databases').json();
        if (!databases.length) {
            this.error(`Not found any database.
Please open up https://console.liara.ir/databases and create the database, first.`);
        }
        const databasesData = databases.map((db) => {
            const shamsiData = shamsi.gregorianToJalali(new Date(db.created_at));
            const Scale = db.scale === 1 ? chalk_1.default.green('ON') : chalk_1.default.gray('OFF');
            const Status = db.status === 'RUNNING' ? 'OK' : db.status;
            return {
                Name: db.hostname,
                Type: db.type,
                Plan: db.planID,
                Status,
                Scale,
                'Created At': `${shamsiData[0]}-${shamsiData[1]}-${shamsiData[2]}`,
            };
        });
        core_1.CliUx.ux.table(databasesData, {
            Name: {},
            Type: {},
            Plan: {},
            Scale: {},
            Status: {},
            'Created At': {},
        }, flags);
    }
}
exports.default = DatabaseList;
DatabaseList.description = 'list available databases';
DatabaseList.flags = Object.assign(Object.assign({}, base_1.default.flags), core_1.CliUx.ux.table.flags());
DatabaseList.aliases = ['db:ls'];
